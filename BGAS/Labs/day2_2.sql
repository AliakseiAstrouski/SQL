create database UNIVER;

use UNIVER;

Create table stud
(id int not  null IDENTITY(1,1),
last_name nvarchar(25) not null,
f_name nvarchar(25) not null,
s_name nvarchar(25),
form nvarchar(10) not null default 'очная',
faculty nvarchar(10) not null default 'ФПМ',
year int  not null default 1,
all_h int default NULL,
inclass_h int default NULL,
br_date date,
in_date date,   
exm float default NULL,
CONSTRAINT PK_stud Primary key (id)
);
insert into stud 
(last_name,f_name,s_name,form,faculty,year,all_h,inclass_h,br_date,in_date,exm) values
(N'Стрынгель',N'К',null,N'заочная',N'ФПК',1,300,100,'19831212','20160901',8),
(N'Козлова',N'Д',N'Е',N'заочная',N'ФПК',2,300,100,'19831012','20150901',8.4),
(N'Федоров',N'Н',N'Н',N'заочная',N'ФПК',3,300,100,'19811207','20140901',7),
(N'Рингель',N'П',N'О',N'заочная',N'ФПК',3,300,100,'19730215','20160901',8),
(N'Бежик',N'Н',N'Н',N'вечерняя',N'ФПК',1,500,400,'19931211','2016-09-01',4.5),
(N'Осипчик',N'Н',N'Н',N'вечерняя',N'ФПК',1,500,400,'19831216','20150901',7.7),
(N'Белый',N'С',N'С',N'вечерняя',N'ФПК',2,450,370,'19870627','20150901',6.7),
(N'Ботяновский',N'А',N'С',N'вечерняя',N'ФПК',2,450,370,'19870723','20150901',7.6),
(N'Слободницкий',N'С',N'А',N'вечерняя',N'ФПК',2,450,370,'19870803','20150901',6.7),
(N'Рогатка',N'П',N'Р',N'очная',N'ФПМ',1,500,450,'19861027','20160901',7.4),
(N'Федоренко',N'П',N'Р',N'очная',N'ФПМ',1,500,450,'19950426','20160901',5.6),
(N'Зингель',N'П',N'В',N'очная',N'ФПМ',2,500,450,'19900425','20150901',3.4),
(N'Михеенок',N'Л',N'Н',N'очная',N'ФПМ',2,500,450,'19890313','20150901',5.3),
(N'Савицкая',N'Л',N'Н',N'очная',N'ФПМ',3,450,400, '19950705','20140901',7.7),
(N'Ковальчук',N'О',N'Е',N'заочная',N'ФПМ',1,350,100,'19640523','20160901',7.6),
(N'Заболотная',N'Л',N'И',N'заочная',N'ФПМ',1,350,100,'19860914','20160901',4.7),
(N'Ковриго',N'И',null,N'заочная',N'ФПМ',2,360,120,'19920301', '20150901',7.7),
(N'Шарапо',N'М',null,N'заочная',N'ФПМ',2,360,120,'19970325', '20150901',8.7),
(N'Сафроненко',N'Н',N'Л',N'заочная',N'ФПМ',3,370,130, '19920525','20140901',7.7),
(N'Зайцева',N'Т',N'Я',N'заочная',N'ФПМ',3,370,130,'19940725','20140901',5.6);

Create table teach
(id int not  null IDENTITY(1,1),
last_name nvarchar(25) not null,
f_name nvarchar(25) not null,
s_name nvarchar(25),
subj nvarchar(150),
form nvarchar(10) not null default 'очная',
faculty nvarchar(10) not null default 'ФПМ',
year int default 1 not NULL,
hours int default NULL,
br_date date,
start_work_date date,
CONSTRAINT PK_teach Primary key (id)
);

insert into teach values
(N'Скворцов',N'К',null,N'Дифференциальные исчисления',N'очная',N'ФПМ',1,150,'19831212','20160901'),
(N'Скворцов',N'К',null,N'Геометрия и алгебра',N'очная',N'ФПМ',1,200,'19831212','20160901'),
(N'Сидоренко',N'Л',N'К',N'Теория вероятности',N'очная',N'ФПМ',1,100,'19831212','20160901'),
(N'Скворцов',N'К',null,N'Дифференциальные исчисления',N'заочная',N'ФПМ',1,34,'19831212','20160901'),
(N'Сидоренко',N'Л',N'К',N'Геометрия и алгебра',N'заочная',N'ФПМ',1,50,'19831212','20160901'),
(N'Сидоренко',N'Л',N'К',N'Теория вероятности',N'заочная',N'ФПМ',1,16,'19831212','20160901'),
(N'Круглов',N'К',N'Д',N'Теория множеств',N'очная',N'ФПМ',2,150,'19860825','20140901'),
(N'Круглов',N'К',N'Д',N'Методы численного анализа',N'очная',N'ФПМ',2,150,'19860825','20140901'),
(N'Загорова',N'К',N'Д',N'Прикладная статистика',N'очная',N'ФПМ',2,150,'19791005','20100901'),
(N'Круглов',N'К',N'Д',N'Теория множеств',N'заочная',N'ФПМ',2,40,'19860825','20140901'),
(N'Круглов',N'К',N'Д',N'Методы численного анализа',N'заочная',N'ФПМ',2,40,'19860825','20140901'),
(N'Загорова',N'К',N'Д',N'Прикладная статистика',N'заочная',N'ФПМ',2,40,'19791005','20100901'),
(N'Зуров',N'П',null,N'Философия',N'очная',N'ФПМ',3,50,'19780712','20160901'),
(N'Зуров',N'П',null,N'Социология',N'очная',N'ФПМ',3,50,'19780712','20160901'),
(N'Сидоренко',N'Л',N'К',N'Методы машинного обучения',N'очная',N'ФПМ',3,150,'19831212','20160901'),
(N'Журков',N'К',null,N'Методы выпуклой оптимизации',N'очная',N'ФПМ',3,150,'19861116','20150901'),
(N'Курт',N'П',N'Р',N'Философия',N'заочная',N'ФПМ',3,20,'19780712','20160901'),
(N'Курт',N'П',N'Р',N'Социология',N'заочная',N'ФПМ',3,20,'19780712','20160901'),
(N'Сидоренко',N'Л',N'К',N'Методы машинного обучения',N'заочная',N'ФПМ',3,50,'19831212','20160901'),
(N'Журков',N'К',null,N'Методы выпуклой оптимизации',N'заочная',N'ФПМ',3,40,'19861116','20150901'),

(N'Скворцов',N'К',null,N'Основы алгоритмизации',N'заочная',N'ФПК',1,30,'19780212','20160901'),
(N'Скворцов',N'К',null,N'Основы операционных систем',N'заочная',N'ФПК',1,20,'19780212','20160901'),
(N'Сидоренко',N'Л',N'К',N'Объектно-ориенторованное программирование',N'заочная',N'ФПК',1,50,'19831212','20160901'),

(N'Скворцов',N'К',null,N'Основы алгоритмизации',N'вечерняя',N'ФПК',1,100,'19780212','20160901'),
(N'Скворцов',N'К',null,N'Основы операционных систем',N'вечерняя',N'ФПК',1,100,'19780212','20160901'),
(N'Сидоренко',N'Л',N'К',N'Объектно-ориенторованное программирование',N'вечерняя',N'ФПК',1,200,'19831212','20160901'),

(N'Кипеня',N'Д',N'А',N'Компонентное программирование',N'заочная',N'ФПК',2,30,'19840109','20130901'),
(N'Зорков',N'К',N'А',N'Средства визуального программирования',N'заочная',N'ФПК',2,40,'19891212','20160901'),
(N'Иридова',N'Т',N'К',N'Объектно-ориенторованное программирование',N'заочная',N'ФПК',1,50,'19830412','20160901'),

(N'Кипеня',N'Д',N'А',N'Компонентное программирование',N'вечерня',N'ФПК',2,130,'19840109','20130901'),
(N'Зорков',N'К',N'А',N'Средства визуального программирования',N'вечерняя',N'ФПК',2,140,'19891212','20160901'),
(N'Иридова',N'Т',N'К',N'Объектно-ориенторованное программирование',N'вечерняя',N'ФПК',2,110,'19830412','20160901'),

(N'Курт',N'П',N'Р',N'Философия',N'заочная',N'ФПК',3,20,'19780712','20160901'),
(N'Курт',N'П',N'Р',N'Социология',N'заочная',N'ФПК',3,20,'19780712','20160901'),
(N'Иридова',N'Т',N'К',N'Современные языки программирования',N'заочная',N'ФПК',3,30,'19830412','20160901'),
(N'Иридова',N'Т',N'К',N'Тестирование программного обеспечения',N'заочная',N'ФПК',3,30,'19830412','20160901'),

(N'Курт',N'П',N'Р',N'Философия',N'вечерня',N'ФПК',3,40,'19780712','20160901'),
(N'Курт',N'П',N'Р',N'Социология',N'вечерня',N'ФПК',3,40,'19780712','20160901'),
(N'Иридова',N'Т',N'К',N'Современные языки программирования',N'вечерня',N'ФПК',3,150,'19830412','20160901'),
(N'Иридова',N'Т',N'К',N'Тестирование программного обеспечения',N'вечерня',N'ФПК',3,160,'19830412','20160901');

---- запросы с группировкой

---SELECT [ ALL| DISTINCT] <Список полей>|*
---FROM <Список таблиц>
---[WHERE <Предикат-условие выборки или соединения>]
--!! [GROUP BY <Список полей результата>]
-- !!![HAVING <Предикат-условие для группы>]
-- [ORDER BY <Список полей, по которым упорядочить вывод>];

-- сгруппировать по факультетам
select faculty, COUNT(*), COUNT(id), min(exm), max(exm), avg(exm) from stud
group by faculty


select faculty, year, COUNT(*) as count_line, COUNT(id) as count_id, min(exm), max(exm), avg(exm) from stud
group by faculty, year

--- вся таблица как группа
select  COUNT(*) as count_line, COUNT(id) as count_id, min(exm), max(exm), avg(exm) from stud

--- какое количество человек учится на каждом факудбьете - курсе
select faculty, year, COUNT(*) as count_line from stud
group by faculty, year

--- на каких  факульетах - курсах учится менее 3 человек
select faculty, year, COUNT(*) as count_line from stud
group by faculty, year
having COUNT(*) < 3

-- найти факультеты на котых учится более 5 человек с оценкой больше 7
select faculty, COUNT(id) from stud
where exm > 7
group by faculty
having  COUNT(id) >5

-------- агрегатные функции и distinct
--- посчитать количество форм обучения в университете
select form from stud

select count(distinct form) from stud

select min(distinct exm),min( exm),  avg(distinct exm),avg(exm)  from stud

select  exm from stud

-- агрегатные функции и null

select count(*),count(id), count(last_name), count(s_name) from stud

-- количество иностранцев

select count(*)-count (s_name) from stud

select count(*) as 'количество иносйтанцев' from stud
where s_name is null


create table firm(
id int primary key,
credit int,
debit int)
insert into firm values(1,100,200), (2,null,200), (3, 150,200)
select * from firm

select sum(debit - credit), SUM(debit)-SUM(credit) from firm

update firm set credit = 0 where credit is null

select sum(debit - credit), SUM(debit)-SUM(credit) from firm

update firm set credit = null  where credit = 0

select debit - credit  from firm

--- найти такие курсы -формы, на которых средняя оценка от 7 до 8 включительно
select faculty, year, avg(exm) from stud
group by faculty, year
having avg(exm) between 7 and 8

--1.	Определить среднее значение средних баллов (то значение которое в таблице) 
--за экзамены для студентов заочной форме обучения каждого факультета.
SELECT faculty, AVG(exm) as Average 
FROM stud 
WHERE form = 'заочная' 
GROUP BY faculty

--2.	Найти значения максимальных средних баллов для каждого факультета с учетом курса
SELECT faculty, MAX(exm) as MaxPoint 
FROM stud 
GROUP BY faculty

--3.	Определить список факультетов, среднее значение средних баллов успеваемости 
--на которых больше 7
SELECT faculty, AVG(exm) as Average 
FROM stud  
GROUP BY faculty 
HAVING AVG(exm) > 7

--4.	Определить список курсов с указанием факультета и формы обучения, 
--средний балл успеваемости на которых больше 7.5
SELECT year, faculty, form, AVG(exm) as Average
FROM stud GROUP BY year, faculty, form 
HAVING AVG(exm) > 7.5

--5.	Определить минимальное значение средних баллов успеваемости 
--на каждом факультете с привязкой к курсу
SELECT faculty, year, MIN(exm) 
FROM stud 
GROUP BY faculty, year 

--6.	Определить перечень факультетов с привязкой к форме минимальное значение 
--средних баллов успеваемости, для которых больше 6 
SELECT faculty, MIN(exm) as Min, AVG(exm) as Average 
FROM stud 
GROUP BY faculty 
HAVING AVG(exm) > 6;


--7.	 Определить, какое количество часов один студент ФПК 3-го курса заочной формы обучения 
--тратит на самостоятельную подготовку
SELECT DISTINCT all_h 
FROM stud 
WHERE faculty = 'ФПК'AND year = '3' AND form = 'заочная';


--8.	Вывести список факультетов, курсов, форм обучения, учась на которых студент   тратит  
--более 150 часов на самостоятельную подготовку
SELECT DISTINCT faculty, year, form 
FROM stud 
WHERE (all_h + inclass_h) > 150


--9.	Вывести количество предметов, читаемых каждым преподавателем
SELECT last_name, f_name, s_name, count(distinct subj)as NumberOfItems 
FROM teach 
GROUP BY last_name, f_name, s_name;

--10.	Вывести количество преподавателей, работающих на каждом факультете
SELECT faculty, count(distinct last_name) 
FROM teach 
GROUP BY faculty


--11.	Вывести список предметов с указанием числа часов являющихся максимальным для данного предмета
SELECT DISTINCT subj, MAX(hours) as MaxHours 
FROM teach 
GROUP BY subj


--12.	Вывести список преподавателей, читающих более одного предмета.
SELECT last_name, count(distinct subj) as NumberOfSubj
FROM teach GROUP BY last_name 
HAVING count(distinct subj) > 1


--13.	Вывести количество предметов, читаемых на каждом факультете на  втором курсе; 
SELECT faculty, count(distinct subj) 
FROM teach
WHERE year = '2' 
GROUP BY faculty


--14.	Вывести количество  предметов, читаемых на каждом факультете преподавателями иностранцами
SELECT faculty, count(distinct subj) as NumberOfSubj 
FROM teach 
WHERE s_name IS NULL 
GROUP BY faculty

